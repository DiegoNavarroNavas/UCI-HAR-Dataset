head(pres_rating)
p <- ggplot(pres_rating, aes(x=year,y=quarter, fill=rating)
p+geom_tile()
p <- ggplot(pres_rating, aes(x=year,y=quarter,fill=rating))
p+geom_tile()
p+geom_raster()
hear(countries)
head(countries)
c2 <- subset(countries, Year == 2009)
c2 <- c2[coplete.cases(c2),]
c2 <- c2[complete.cases(c2),]
set.seed(201)
c2 <- c2[sample(1:nrow(c2),25)]
c2 <- c2[sample(1:nrow(c2),25),]
c2
rownames(c2) <- c2$Name
c2
c2 <- c2[,4:7]
c2
c3 <- scale(c2)
c3
hc <- hclust(dist(c3))
plot(hc)
plot(hc, hang=-1)
head(UCBAdmissions)
str(UCBAdmissions)
UCBAdmissions
ftable(UCBAdmissions)
dimnames(UCBAdmissions)
install.packages("vcd")
library(vcd)
mosaic(~Admit + Gender + Dept, data=UCBAdmissions)
mosaic(~Admit + Gender + Dept, data=UCBAdmissions, highlighting="Admit")
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit")
mosaic(~Admit + Gender + Dept, data=UCBAdmissions, highlighting="Admit")
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit")
mosaic(~Admit + Gender + Dept, data=UCBAdmissions, highlighting="Admit")
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit")
mosaic(~Admit + Gender + Dept, data=UCBAdmissions, highlighting="Admit")
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit")
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit", highlighting_fill=c("lightblue","pink"), direction=c("v","h","v"))
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit", highlighting_fill=c("lightblue","pink"), direction=c("v","v","v"))
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit", highlighting_fill=c("lightblue","pink"), direction=c("v","v","h"))
mosaic(~Dept + Gender + Admit, data=UCBAdmissions, highlighting="Admit", highlighting_fill=c("lightblue","pink"), direction=c("v","h","h"))
head(UCBAdmissiong)
head(UCBAdmissions)
UCBAdmissions
mosaic?
?mosaic
table
infert
head(infert)
table(infert$education,infert$parity)
?table
xtabs(infert$education,infert$parity)
?xtabs
xtabs(infert$education,infert$parity)
data(infert)
data(infert)
gt2 <- infert$parity>2
str(gt2)
head(gt2)
table(infert$education, gt2)
table(infert$education, gt2, dnn=c("Edutation","Parity"))
gt2 <- ifelse(infert$parity>2, "Over 2", "2 or less")
table(infert$education, gt2, dnn=c("Edutation","Parity"))
xtabs(infert$education,infert$parity)
table(infert$education,infert$parity)
UCBAdmissions
str(UCBAdmissions)
table(infert$education,infert$parity)
mosaic(table(infert$education,infert$parity))
tbl <- table(infert$education,infert$parity)
str(tbl)
tbl
table(infert$education, infert$parity, dnn=c("Edutation","Parity"))
tbl <- table(infert$education, infert$parity, dnn=c("Edutation","Parity"))
mosaic(tbl$Education, tbl$Parity)
?mosaic
tbl
infert
str(infert)
tbl <- table(infert$education, infert$parity, infert$stratum, dnn=c("Edutation","Parity","Stratum"))
tbl
str(tbl)
mosaic(~tbl$Education + tbl$Parity + tbl$Stratum)
mosaic(~Education + Parity + Stratum, data=tbl)
tbl <- table(infert$education, infert$parity, infert$stratum, dnn=c("Education","Parity","Stratum"))
mosaic(~Education + Parity + Stratum, data=tbl)
tbl
str(infert)
tbl <- table(infert$education, infert$parity, infert$induced, dnn=c("Education","Parity","Induced"))
mosaic(~Education + Parity + Induced, data=tbl)
tbl
mosaic(~Education + Parity, data=tbl)
mosaic(~Dept + Gender + Admit, data=UCBAdmissions)
mosaic(~Education + Parity + Induced, data=tbl)
mosaic(~Education + Parity, data=tbl)
?mosaic
data <- read.csv("http://datasets.flowingdata.com/post-data.txt")
install.packages("portfolio")
map.market(id=data$id, area=data$views, group=data$category, color=data$comments, main="FlowingData Map")
library(portfolio)
map.market(id=data$id, area=data$views, group=data$category, color=data$comments, main="FlowingData Map")
str(data)
head(data)
data
sessionInfo
sessionInfo()
round(memory.limit()/2^20, 2)
?memory.limit
memory.limit()
install.packages("swirl")
library(swirl)
install.packages("curl")
packageVersion(swirl)
install.packages("swirl")
install.packages("libcurl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl", dependencies=TRUE)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(swirl)
swirl()
cran <- tbl_df(mydf)
help
help
cran <- tbl_df(mydf)
help
bye
bye()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mdf)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
520
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cra, package== "swirl")
filter(cran, package== "swirl")
filter(cran, r_version =="3.1.1", country =="US")
?Comparison
filter(cran, r_version =="3.0.2", country =="IN")
filter(cran, r_version <="3.0.2", country =="IN")
filter(cran, country =="IN" | country =="US")
filter(cran, size>100500, r_os =="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3 size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, avg_size=mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_counts_sorted)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex","class"))
submit()
students3
?gather
reset()
swirl()
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
bind_rows(passed, failed)
sat
submit()
submit()
?separate
submit()
submit()
submit()
submit()
bye()
?download.file
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile = "2Fss06hid.csv", method = "curl")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile = "Fss06hid.csv", method = "curl")
dat <- tbl_df(read.csv("Fss06hid.csv"))
agricultureLogical <- dat[ACR==3 & AGS==6]
agricultureLogical <- dat[dat$ACR==3 & dat$AGS==6]
which(agricultureLogical)
head(agricultureLogical)
str(agricultureLogical)
str(dat)
str(dat$ACR)
str(dat$AGS)
table#(dat$ACR)
table(dat$ACR)
table(dat$AGS)
agricultureLogical <- (dat$ACR==3 & dat$AGS==6)
which(agricultureLogical)
?jpeg
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
jpeg("getdata_jeff.jpg")
img <- jpeg("getdata_jeff.jpg")
install.packages("jpeg")
library(jpeg)
?jpeg
str(img)
img <- readJPEG("getdata_jeff.jpg", native=TRUE)
quantile(img, probs = 0.3)
quantile(img, probs = 0.8)
gdp <- read.csv("getdata_data_GDP.csv")
education <- read.csv("getdata_data_EDSTATS_Country.csv")
gdp <- tbl_df(read.csv("getdata_data_GDP.csv"))
education <- tbl_df(read.csv("getdata_data_EDSTATS_Country.csv"))
gdp
?read.csv
education
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 3))
gdp
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4))
gdp
arrange(gdp, desc(X.1))
View(gdp)
View(education)
names(gdp)
?merge
?match
education$CountryCode %in% gdp$X
sum(education$CountryCode %in% gdp$X)
sum(gdp$X %in% education$CountryCode)
match(gdp$X, education$CountryCode)
!is.na(match(gdp$X, education$CountryCode))
sum(!is.na(match(gdp$X, education$CountryCode)))
education_gdp <- merge(education, gdp, by.x="CountryCode", by.y = "X", all=FALSE)
education_gdp
education_gdp
str(education_gdp)
arrange(education_gdp, desc(X.1))
head(arrange(education_gdp, desc(X.1)))
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4)) %>% select(X:X.4)
education <- tbl_df(read.csv("getdata_data_EDSTATS_Country.csv"))
education_gdp <- merge(education, gdp, by.x="CountryCode", by.y = "X")
View(education_gdp)
education_gdp
arrange(education_gdp, desc(X.1))
data_arranged <- arrange(education_gdp, desc(X.1))
data_arranged$X.1
arrange(education_gdp, desc(X.1)) %>% select(long.name)
arrange(education_gdp, desc(X.1)) %>% select(Long.Name)
View(gdp)
?arrange
arrange(education_gdp, desc(X.1)) %>% select(Long.Name, X.1)
gdp$X.1 <- as.numeric(gdp$X.1)
arrange(education_gdp, desc(X.1)) %>% select(Long.Name, X.1)
education_gdp <- merge(education, gdp, by.x="CountryCode", by.y = "X")
arrange(education_gdp, desc(X.1)) %>% select(Long.Name, X.1)
?select
?filter
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4)) %>% select(X:X.4) %>% filter(X.1>0, na.rm=TRUE)
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4)) %>% select(X:X.4)
gdp$X.1 <- as.numeric(gdp$X.1)
education <- tbl_df(read.csv("getdata_data_EDSTATS_Country.csv"))
education_gdp <- merge(education, gdp, by.x="CountryCode", by.y = "X")
arrange(education_gdp, desc(X.1)) %>% select(Long.Name, X.1)
View(gdp)
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4)) %>% select(X:X.4)
gdp$X.1 <- as.numeric(gdp$X.1)
gdp <- tbl_df(read.csv("getdata_data_GDP.csv", skip = 4)) %>% select(X:X.4)
gdp$X.1 <- as.character(gdp$X.1)
gdp$X.1 <- as.numeric(gdp$X.1)
education <- tbl_df(read.csv("getdata_data_EDSTATS_Country.csv"))
education_gdp <- merge(education, gdp, by.x="CountryCode", by.y = "X")
arrange(education_gdp, desc(X.1)) %>% select(Long.Name, X.1)
?summarize
group_by(education_gdp, Income.Group) %>% summarize(mean(X.1))
, na.rm=TRUE
group_by(education_gdp, Income.Group) %>% summarize(mean(X.1), na.rm=TRUE)
?group_by
group_by(education_gdp, Income.Group) %>% summarize(mean(X.1, na.rm=TRUE))
?quantile
quantile(education_gdp$X.1)
quantile(education_gdp$X.1, na.rm = TRUE)
install.packages("Hmisc")
library(Hmisc)
mutate(education_gdp, rank_quantile=cut2(X.1, g=5, na.rm = TRUE))
cut2
?cut2
mutate(education_gdp, rank_quantile=cut2(X.1, g=5))
mutate(education_gdp, rank_quantile=cut2(X.1, g=5)) %>% table(Income.Group, rank_quantile)
?table
mutate(education_gdp, rank_quantile=cut2(X.1, g=5)) %>% table(rank_quantile)
education_gdp_mutate <- mutate(education_gdp, rank_quantile=cut2(X.1, g=5))
table(education_gdp_mutate, Income.Group, rank_quantile)
education_gdp_mutate <- mutate(education_gdp, rank_quantile=cut2(X.1, g=5))
table(education_gdp_mutate, Income.Group, rank_quantile)
names(education_gdp_mutate)
table(education_gdp_mutate, "Income.Group", "rank_quantile")
table(education_gdp_mutate, rank_quantile")
table(education_gdp_mutate, "rank_quantile")
table(education_gdp_mutate, "Income.Group")
table(unlist(education_gdp_mutate), "Income.Group", "rank_quantile")
education_gdp_mutate$Income.Group
education_gdp_mutate$rank_quantile
table(education_gdp_mutate$Income.Group, education_gdp_mutate$rank_quantile)
setwd("/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset")
read.table("features.txt")
features <- read.table("features.txt")
str(features)
head(features)
unique(features$V2)
labels <- read.table("activity_labels.txt")
head(labels)
subject_test <- read.table("test/subject_test.txt")
x_test <- read.table("X_test.txt")
x_test <- read.table("test/X_test.txt")
View(subject_test)
View(x_test)
View(x_test)
str(x_test)
summary(x_test)
y_test <- read.table("test/y_test.txt")
head(y_test)
str(y_test)
View(features)
y_test <- as.factor(read.table("test/y_test.txt"))
?read.table
y_test <- read.table("test/y_test.txt", colClasses = "factor")
subject_test <- read.table("test/subject_test.txt", colClasses = "factor")
?dplyr
library(dplyr)
?dplyr
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
head(dat)
str(dat)
dat
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
dat
str(dat)
features
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
str(dat[1])
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
labels <- tbl_df(read.table("activity_labels.txt", colClasses = "factor"))
labels
lelves(dat$Activity)
levels(dat$Activity)
levels(dat$Activity) <- labels$V2
levels(dat$Activity)
head(dat)
?select
dat_mean_sd <- select(dat, contains("mean"), contains("sd"))
dat_mean_sd <- select(dat, contains("mean"))
names(dat)
unique(names(dat))
test <- unique(names(dat))
test
rm("test")
dat_mean_sd <- select(dat, contains("mean"))
?contains
?contain
?grep
colnames(dat) <- c("Subject", "Activity", features$V2)
names(dat)
features
features <- tbl_df(read.table("features.txt", colClasses = c("numeric", "character")))
colnames(dat) <- c("Subject", "Activity", features$V2)
names(dat)
features
grep("mean", features$V2)
features$V2[1]
features$V2[2]
features$V2[3]
features$V2[4]
features$V2[5]
features$V2[39]
features$V2[38]
head(features$V2,45)
grep("mean" | "std", features$V2)
grep("mean | std", features$V2)
grep("mean|std", features$V2)
head(features$V2,46)
head(features$V2,47)
dat_mean_sd <- select(dat, grep("mean|std", features$V2))
dat_mean_sd <- dat[, grep("mean|std", features$V2)]
names(dat_mean_sd)
dat_mean_sd <- dat[, grep("mean|std", names(dat))]
dat_mean_sd <- dat[, grep("Subject|Activity|mean|std", names(dat))]
names(dat_mean_sd)
head(dat_mean_sd)
head(dat_mean_sd, 5)
dat_mean_sd
dat_mean_sd <- dat[, grep("Subject|Activity|-mean|-std", names(dat))]
dat_mean_sd
dat_mean_sd <- dat[, grep("Subject|Activity|-mean()|-std()", names(dat))]
dat_mean_sd
dat_mean_sd <- dat[, grep("Subject|Activity|-mean()|-std()", names(dat))]
dat_mean_sd <- dat[, grep("Subject|Activity|-mean\(|-std\(", names(dat))]
dat_mean_sd <- dat[, grep("Subject|Activity|-mean\\(|-std\\(", names(dat))]
names(dat_mean_sd)
dat_mean_sd <- dat[, grep("Subject|Activity|-mean|-std", names(dat))]
names(dat_mean_sd)
?summarize
dat_summary <- summarize(groupby(dat_mean_sd, Subject, Activity), mean)
dat_summary <- summarize(group_by(dat_mean_sd, Subject, Activity), mean)
dat_summary <- summarize(group_by(dat_mean_sd, Subject, Activity))
dat_summary
head(dat_summary, 90)
print(dat_summary)
print(dat_summary, 10)
print(dat_summary, 100)
dat_summary <- summarize(group_by(dat_mean_sd, Subject, Activity), mean())
?summarize_each
dat_summary <- dat_mean_sd %>% group_by(Subject, Activity) %>% summarize_each(funs(mean))
dat_summary
source('/media/diego/Data/1. Data Science/15. Coursera/UCI HAR Dataset/run_analysis.R')
dat_summary
head(dat_summary,50)
View(dat_summary)
levels(dat_summary$Subject)
order(levels(dat_summary$Subject))
sort(levels(dat_summary$Subject))
sort(as.numeric(levels(dat_summary$Subject)))
?write.table
write.table(dat_summary, "Summary.txt")
write.table(dat_summary, "Summary.txt", row.names = FALSE)
?codebook
install.packages("codebook")
install.packages("memisc")
library(memisc)
codebook(dat_summary)
codebook("dat_summary")
?mtcars
codebook(dat)
codebook(as.df(dat_summary))
codebook(as.data.frame(dat_summary))
?codebook
test <- codebook(as.data.frame(dat_summary))
test
